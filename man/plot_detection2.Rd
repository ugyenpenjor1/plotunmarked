% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_detection2.R
\name{plot_detection2}
\alias{plot_detection2}
\title{Plot detection probability vs. covariate from unmarked model}
\usage{
plot_detection2(
  model,
  focal_cov,
  cat_cov = FALSE,
  group_cov = NULL,
  xlab = NULL
)
}
\arguments{
\item{model}{An object of class \code{unmarkedFit}, typically created by fitting a model
using functions from the \code{unmarked} package such as \code{pcount}, \code{occu}, etc.}

\item{focal_cov}{Character string specifying the name of the focal covariate (either
detection or site-level) to plot on the x-axis.}

\item{cat_cov}{Logical. If \code{TRUE}, the focal covariate is treated as categorical.
Defaults to \code{FALSE}.}

\item{group_cov}{Optional character string specifying the name of a grouping
categorical covariate. If \code{NULL} and \code{cat_cov = TRUE}, defaults to \code{focal_cov}.}

\item{xlab}{Optional character string for labeling the x-axis. If \code{NULL}, uses
\code{focal_cov} as the label.}
}
\value{
A \code{ggplot2} object showing the predicted detection probability as a function
of the specified covariate, with optional grouping.
}
\description{
Creates a plot of predicted detection probabilities from a fitted \code{unmarked} model
as a function of a specified covariate. Supports both continuous and categorical
covariates and polynomial terms.
}
\details{
This function uses the detection formula of the \code{unmarkedFit} model to
generate predicted detection probabilities over the range of a focal covariate.
When the covariate is continuous, a sequence of values is generated for plotting.
If the covariate is categorical, the function plots estimates for each category.
If a second grouping variable is supplied, separate lines or error bars are
generated for each group.

If the model includes a quadratic term (e.g., \code{I(x^2)}) for the focal covariate,
this term is automatically constructed and included in prediction.

All other covariates are held constant at their reference levels (for factors) or
at 0 (for numeric covariates).
}
\examples{
\dontrun{
# Assuming `umf` is an unmarkedFrame and `fit` is a model fit with occu()
fit <- occu(~date+I(date^2)+observer+wind~forest+elevation, data =  umf)
plot_detection2(fit, focal_cov = "wind", cat_cov = FALSE)
plot_detection2(fit, focal_cov = "observer", cat_cov = TRUE)
plot_detection2(fit, focal_cov = "date", group_cov = NULL, cat_cov = FALSE)
}

}
